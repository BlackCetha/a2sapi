package steam

import (
	"strings"
	"testing"
)

func TestParsePlayerInfo(t *testing.T) {
	data := []byte{
		0xFF, 0xFF, 0xFF, 0xFF, 0x44, 0x07, 0x00, 0x53, 0x68, 0x57, 0x69, 0x56,
		0x65, 0x4C, 0x00, 0x03, 0x00, 0x00, 0x00, 0xEC, 0x37, 0x92, 0x45, 0x00,
		0x73, 0x74, 0x75, 0x6D, 0x70, 0x79, 0x00, 0x05, 0x00, 0x00, 0x00, 0x83,
		0xE4, 0xF3, 0x44, 0x00, 0x69, 0x74, 0x61, 0x6C, 0x6B, 0x74, 0x6F, 0x77,
		0x61, 0x6C, 0x6C, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0x0E, 0xE5,
		0x44, 0x00, 0x5A, 0x61, 0x63, 0x6B, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6B,
		0x48, 0x61, 0x6C, 0x6C, 0x00, 0x04, 0x00, 0x00, 0x00, 0x75, 0xB3, 0xCD,
		0x44, 0x00, 0x53, 0x70, 0x78, 0x74, 0x72, 0x61, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x0A, 0xED, 0x74, 0x44, 0x00, 0x50, 0x6F, 0x72, 0x6B, 0x6E, 0x74,
		0x61, 0x74, 0x65, 0x72, 0x73, 0x00, 0x01, 0x00, 0x00, 0x00, 0xBB, 0x2D,
		0xC0, 0x43, 0x00, 0x53, 0x70, 0x68, 0x69, 0x6E, 0x78, 0x4E, 0x75, 0x6D,
		0x62, 0x65, 0x72, 0x4E, 0x69, 0x6E, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x11, 0x91, 0xF7, 0x42}

	pinfo, err := parsePlayerInfo(data)
	if err != nil {
		t.Fatalf("Unexpected error when parsing players")
	}
	if len(pinfo) != 7 {
		t.Fatalf("Expected 7 players, got: %d", len(pinfo))
	}
	playerstrings := []string{
		"stumpy", "ZackAttackHall", "ShWiVeL", "Spxtra", "Porkntaters",
		"SphinxNumberNine", "italktowalls"}

	found, expected := 0, 7
	for _, p := range pinfo {
		for _, ps := range playerstrings {
			if strings.EqualFold(p.Name, ps) {
				found++
			}
		}
	}
	if found != expected {
		t.Fatalf("%d players are missing.", expected-found)
	}
}

func TestGetDuration(t *testing.T) {
	durfloat, durstring := getDuration([]byte{0xEC, 0x37, 0x92, 0x45})
	if durfloat != 4678.990234 {
		t.Fatalf("Expected duration floating point value to be 4678.990234, got: %f",
			durfloat)
	}
	if !strings.EqualFold(durstring, "1h17m58s") {
		t.Fatalf("Expected duration string to be 1h17m58s, got: %s", durstring)
	}
	durfloat, durstring = getDuration([]byte{0x11, 0x91, 0xF7, 0x42})
	if durfloat != 123.783333 {
		t.Fatalf("Expected duration floating point value to be 4678.990234, got: %f",
			durfloat)
	}
	if !strings.EqualFold(durstring, "2m3s") {
		t.Fatalf("Expected duration string to be 2m3s, got: %s", durstring)
	}
}
